*****************************************************
#coxeter群生成函数
CoxeterGroup:=function(k,L) 
#生成元个数为k，L为对应mij，下三角从上到下读
local G,K,gen,i,j,m;
G := FreeGroup(k);#初始化自由群
gen := GeneratorsOfGroup(G);#生成元
K := List(gen,x->x^2);#kernal
m := 0;
for i in [1..k-1] do  #第i行
for j in [1..i] do #第j列
Add(K,(gen[i+1]*gen[j])^L[m+j]);
od;
m := m + i;
od;
#PPrint(K); #调试，检验生成元
return G/K;
end;;


*****************************************************
#匹配函数
Match:=function(s,S)
    #匹配 s 在 S 中的相同元素并返回
    local i,j;
    j := 0;
    for i in S do 
        if i = s then
            j := 1;
            break;
        fi;
    od;
    if j = 0 then 
        Print("Error\n");
    fi;
    return i;
end;; 

*****************************************************
#群生成树
GroupTree := function(G,k)
#生成k+1行，k>0
local gens,L,x,y,i;
gens := GeneratorsOfGroup(G); #生成元
L := List([1..k+1],x->[]); #初始化树
L[1] := [gens[1]^2]; #第1行
L[2] := List(gens); #第2行
for i in [3..k+1] do #开始生成第i行
    for x in L[i-1] do #对第i-1行操作
        if IsList(x) then #被标记则跳过
            continue;
        fi;
        for y in gens do #开始生成
            y := x*y; #右乘生分支
            if y in L[i-2] then #一类断点
                Add(L[i],[y,1]);
            elif y in L[i] then #二类断点
                Add(L[i],[y,2]);
            else
                Add(L[i],y); #新分支
            fi;
         od;
    od;
od;
return L;;
end;;

*****************************************************

