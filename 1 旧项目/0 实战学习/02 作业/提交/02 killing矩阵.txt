## 定义函数
gap> chk := function(s,n)
>     ## 求单李代数的killing型矩阵行列式 ##
>     local L,M,fac,factors,out;
>     L := SimpleLieAlgebra(s,n,Rationals); #单李代数（特征0域）
    out := List(Set(factors),fac->[fac,Number(factors,i->(i=fac))]);
    if fac<0 then Add(out,[-1,1]);fi; #添上负号
>     M := KillingMatrix(Basis(L)); #killing型矩阵
>     fac := DeterminantMat(M); #计算行列式
>     factors := FactorsInt(AbsInt(fac)); #因子分解
>     out := List(Set(factors),fac->[fac,Number(factors,i->(i=fac))]);
>     if fac<0 then Add(out,[-1,1]);fi; #添上负号
>     return out;
> end;;
gap> lie := [["A",[1..8]],["D",[4..8]],["E",[6..8]],
> ["B",[2..8]],["C",[3..8]],["F",[4]],["G",[2]]];;
gap> for x in lie do
>     s:=x[1];
>     for i in x[2] do
>     Print(s,i,"： ",chk(s,i),"\n"); #打印结果
>     od;
> od;

## 输出结果
A1： [ [ 2, 7 ], [ -1, 1 ] ]
A2： [ [ 2, 8 ], [ 3, 9 ], [ -1, 1 ] ]
A3： [ [ 2, 47 ] ]
A4： [ [ 2, 24 ], [ 5, 25 ] ]
A5： [ [ 2, 71 ], [ 3, 36 ], [ -1, 1 ] ]
A6： [ [ 2, 48 ], [ 7, 49 ], [ -1, 1 ] ]
A7： [ [ 2, 255 ] ]
A8： [ [ 2, 80 ], [ 3, 162 ] ]
D4： [ [ 2, 58 ], [ 3, 28 ] ]
D5： [ [ 2, 182 ] ]
D6： [ [ 2, 134 ], [ 5, 66 ] ]
D7： [ [ 2, 275 ], [ 3, 91 ] ]
D8： [ [ 2, 242 ], [ 7, 120 ] ]
E6： [ [ 2, 234 ], [ 3, 79 ] ]
E7： [ [ 2, 267 ], [ 3, 266 ], [ -1, 1 ] ]
E8： [ [ 2, 496 ], [ 3, 248 ], [ 5, 248 ] ]
B2： [ [ 2, 16 ], [ 3, 10 ] ]
B3： [ [ 2, 29 ], [ 5, 21 ], [ -1, 1 ] ]
B4： [ [ 2, 46 ], [ 7, 36 ] ]
B5： [ [ 2, 67 ], [ 3, 110 ], [ -1, 1 ] ]
B6： [ [ 2, 92 ], [ 11, 78 ] ]
B7： [ [ 2, 121 ], [ 13, 105 ], [ -1, 1 ] ]
B8： [ [ 2, 154 ], [ 3, 136 ], [ 5, 136 ] ]
C3： [ [ 2, 78 ], [ -1, 1 ] ]
C4： [ [ 2, 64 ], [ 5, 36 ] ]
C5： [ [ 2, 155 ], [ 3, 55 ], [ -1, 1 ] ]
C6： [ [ 2, 144 ], [ 7, 78 ] ]
C7： [ [ 2, 511 ], [ -1, 1 ] ]
C8： [ [ 2, 256 ], [ 3, 272 ] ]
F4： [ [ 2, 78 ], [ 3, 104 ] ]
G2： [ [ 2, 42 ], [ 3, 7 ] ]
